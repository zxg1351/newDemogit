<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.TDepartmentWorkerMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.bean.TDepartmentWorker">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="t_work_name" jdbcType="VARCHAR" property="tWorkName" />
    <result column="t_work_tel" jdbcType="VARCHAR" property="tWorkTel" />
    <result column="t_work_type" jdbcType="CHAR" property="tWorkType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="manager_Id" jdbcType="INTEGER" property="managerId" />
    <result column="t_work_address" jdbcType="VARCHAR" property="tWorkAddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, t_work_name, t_work_tel, t_work_type, create_time, create_user, update_user, 
    update_time, del_flag, manager_Id, t_work_address
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.bean.TDepartmentWorkerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_department_worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_department_worker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_department_worker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.bean.TDepartmentWorkerExample">
    delete from t_department_worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.bean.TDepartmentWorker">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_department_worker (t_work_name, t_work_tel, t_work_type, 
      create_time, create_user, update_user, 
      update_time, del_flag, manager_Id, 
      t_work_address)
    values (#{tWorkName,jdbcType=VARCHAR}, #{tWorkTel,jdbcType=VARCHAR}, #{tWorkType,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=CHAR}, #{managerId,jdbcType=INTEGER}, 
      #{tWorkAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.bean.TDepartmentWorker">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_department_worker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tWorkName != null">
        t_work_name,
      </if>
      <if test="tWorkTel != null">
        t_work_tel,
      </if>
      <if test="tWorkType != null">
        t_work_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="managerId != null">
        manager_Id,
      </if>
      <if test="tWorkAddress != null">
        t_work_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tWorkName != null">
        #{tWorkName,jdbcType=VARCHAR},
      </if>
      <if test="tWorkTel != null">
        #{tWorkTel,jdbcType=VARCHAR},
      </if>
      <if test="tWorkType != null">
        #{tWorkType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="tWorkAddress != null">
        #{tWorkAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.bean.TDepartmentWorkerExample" resultType="java.lang.Long">
    select count(*) from t_department_worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_department_worker
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tWorkName != null">
        t_work_name = #{record.tWorkName,jdbcType=VARCHAR},
      </if>
      <if test="record.tWorkTel != null">
        t_work_tel = #{record.tWorkTel,jdbcType=VARCHAR},
      </if>
      <if test="record.tWorkType != null">
        t_work_type = #{record.tWorkType,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
      <if test="record.managerId != null">
        manager_Id = #{record.managerId,jdbcType=INTEGER},
      </if>
      <if test="record.tWorkAddress != null">
        t_work_address = #{record.tWorkAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_department_worker
    set id = #{record.id,jdbcType=INTEGER},
      t_work_name = #{record.tWorkName,jdbcType=VARCHAR},
      t_work_tel = #{record.tWorkTel,jdbcType=VARCHAR},
      t_work_type = #{record.tWorkType,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=CHAR},
      manager_Id = #{record.managerId,jdbcType=INTEGER},
      t_work_address = #{record.tWorkAddress,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.bean.TDepartmentWorker">
    update t_department_worker
    <set>
      <if test="tWorkName != null">
        t_work_name = #{tWorkName,jdbcType=VARCHAR},
      </if>
      <if test="tWorkTel != null">
        t_work_tel = #{tWorkTel,jdbcType=VARCHAR},
      </if>
      <if test="tWorkType != null">
        t_work_type = #{tWorkType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="managerId != null">
        manager_Id = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="tWorkAddress != null">
        t_work_address = #{tWorkAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.bean.TDepartmentWorker">
    update t_department_worker
    set t_work_name = #{tWorkName,jdbcType=VARCHAR},
      t_work_tel = #{tWorkTel,jdbcType=VARCHAR},
      t_work_type = #{tWorkType,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR},
      manager_Id = #{managerId,jdbcType=INTEGER},
      t_work_address = #{tWorkAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>